// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  name       String?
  songs      Song[]
  Annotation Annotation[]
}

model Artist {
  id          Int     @id @default(autoincrement())
  name        String
  realName    String?
  description String?
  image       String?
  songs       Song[]
  albums       Album[]
}

model Song {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  image       String?
  artist      Artist? @relation(fields: [artistId], references: [id])
  artistId    Int
  addedBy     User?   @relation(fields: [addedById], references: [id])
  addedById   Int
  lines        Line[]
  album       Album?  @relation(fields: [albumId], references: [id])
  albumId     Int?
}

model Line {
  id          Int          @id @default(autoincrement())
  text        String
  type        String
  order       Int
  song        Song         @relation(fields: [songId], references: [id])
  songId      Int
  annotations Annotation[]
}

model Annotation {
  id     Int     @id @default(autoincrement())
  text   String
  range  String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  lines  Line[]
}

model Album {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  image       String?
  artist      Artist? @relation(fields: [artistId], references: [id])
  artistId    Int
  songs       Song[]
}
